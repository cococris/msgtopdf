"""
Script de test local pour l'API MSG to PDF
"""
import requests
import time
import sys

def test_api():
    """Test de l'API en mode d√©veloppement"""
    base_url = "http://localhost:8000"
    
    print("üß™ Test de l'API MSG to PDF en mode d√©veloppement")
    print("=" * 60)
    
    # Attendre que l'API soit pr√™te
    print("‚è≥ Attente du d√©marrage de l'API...")
    for i in range(10):
        try:
            response = requests.get(f"{base_url}/health", timeout=2)
            if response.status_code == 200:
                print("‚úÖ API pr√™te !")
                break
        except requests.exceptions.RequestException:
            time.sleep(1)
            print(f"   Tentative {i+1}/10...")
    else:
        print("‚ùå L'API ne r√©pond pas. V√©rifiez qu'elle est d√©marr√©e.")
        return False
    
    # Test 1: Health check
    print("\n1Ô∏è‚É£ Test de sant√© de l'API")
    try:
        response = requests.get(f"{base_url}/health")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ Status: {data['status']}")
            print(f"   üìä Version: {data['version']}")
            print(f"   üîë JWKS: {data['jwks_status']}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå Erreur: {e}")
        return False
    
    # Test 2: User info (sans authentification en mode dev)
    print("\n2Ô∏è‚É£ Test des informations utilisateur (mode dev)")
    try:
        response = requests.get(f"{base_url}/user/info")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ User ID: {data['user_id']}")
            print(f"   üìß Email: {data['email']}")
            print(f"   üë• Roles: {data['roles']}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå Erreur: {e}")
        return False
    
    # Test 3: Conversion (avec un fichier de test)
    print("\n3Ô∏è‚É£ Test de conversion (fichier de test)")
    try:
        # Cr√©ation d'un fichier de test simple
        test_content = b"Test MSG file content for API testing"
        files = {"file": ("test.msg", test_content, "application/octet-stream")}
        data = {"merge_attachments": "true"}
        
        response = requests.post(f"{base_url}/convert", files=files, data=data)
        
        if response.status_code == 200:
            print("   ‚úÖ Conversion r√©ussie !")
            print(f"   üìÑ Taille du PDF: {len(response.content)} bytes")
            print(f"   üÜî Request ID: {response.headers.get('X-Request-ID', 'N/A')}")
            print(f"   ‚è±Ô∏è Temps de traitement: {response.headers.get('X-Processing-Time', 'N/A')}s")
            
            # Sauvegarde du PDF de test
            with open("test_output.pdf", "wb") as f:
                f.write(response.content)
            print("   üíæ PDF sauvegard√© dans 'test_output.pdf'")
            
        else:
            print(f"   ‚ùå Erreur de conversion: {response.status_code}")
            try:
                error_data = response.json()
                print(f"   üìù D√©tail: {error_data.get('detail', 'Erreur inconnue')}")
            except:
                print(f"   üìù R√©ponse: {response.text[:200]}...")
            return False
            
    except Exception as e:
        print(f"   ‚ùå Erreur: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ Tous les tests sont pass√©s avec succ√®s !")
    print("\nüìã R√©sum√©:")
    print("   ‚Ä¢ API de sant√© : ‚úÖ")
    print("   ‚Ä¢ Authentification (mode dev) : ‚úÖ")
    print("   ‚Ä¢ Conversion MSG vers PDF : ‚úÖ")
    print("\nüåê Documentation disponible sur:")
    print("   ‚Ä¢ Swagger UI: http://localhost:8000/docs")
    print("   ‚Ä¢ ReDoc: http://localhost:8000/redoc")
    
    return True

def main():
    """Point d'entr√©e principal"""
    if len(sys.argv) > 1 and sys.argv[1] == "--help":
        print("Usage: python test_api_local.py")
        print("\nCe script teste l'API MSG to PDF en mode d√©veloppement.")
        print("Assurez-vous que l'API est d√©marr√©e avec 'python run.py'")
        return
    
    success = test_api()
    sys.exit(0 if success else 1)

if __name__ == "__main__":
    main()